//	--------------------------------- update user data ----------------------------

	public User update(User s) {

		try {
			Connection con = DriverManager.getConnection("jdbc:mysql://localhost/abcd", "root", "nclc123456");
			PreparedStatement ps = con.prepareStatement(
					"update user set name=?, gender=?, email=?, password=?, phone=?, balance=? where a_number=?");

			ps.setString(1, s.getName());
			ps.setString(2, s.getGender());
			ps.setString(3, s.getEmail());
			ps.setString(4, s.getPassword());
			ps.setString(5, s.getPhone());
			ps.setDouble(6, s.getBalance());
			ps.setInt(7, s.getA_number());

			ps.executeUpdate();

		} catch (Exception e) {
			// TODO: handle exception
		}

		return s;
	}

//	---------------------------------delete user data ----------------------------

	public User delete(User s) {

		try {
			Connection con = DriverManager.getConnection("jdbc:mysql://localhost/abcd", "root", "nclc123456");
			PreparedStatement ps = con.prepareStatement("delete from user  where a_number=?");

			ps.setInt(1, s.getA_number());
			
			ps.executeUpdate();

		} catch (Exception e) {
			// TODO: handle exception
		}

		return s;
	}
--------------------------------------------------------------------------------- controller code ------------------------------------------------------------------------------------

//	----------------- update user data -----------------------------------

	@PutMapping("/update")
	public User doUpdate(@RequestBody User s) {

		UserDA da = new UserDA();
		User data = da.update(s);

		return data;
	}

//	----------------- delete user data -----------------------------------

	@PostMapping("/delete")
	public User dodelete(@RequestBody User s) {

		UserDA da = new UserDA();
		User data = da.delete(s);

		return data;
	}
---------------------------------------------------------------------------------- service ----------------------------------------------------


 // ------------------------ update user data --------------------------------
  update(s:User):Observable<User>{
    this.url="http://localhost:8080/update";
    return this.http.put<User>(this.url,s);
  }

    // ------------------------ delete user data --------------------------------
    delete(s:User):Observable<User>{
      this.url="http://localhost:8080/delete";
      return this.http.post<User>(this.url,s);
    }

---------------------------------------------------------------------------- com.ts-------------------------------------------------------

  a_number: any;
  name: any;
  gender: any;
  email: any;
  password: any;
  phone: any;
  balance: any;

  data:any;
  deleteData:any;
  constructor(private router:Router, private myservice: UserRegistrationService) { 
    this.data=this.router.getCurrentNavigation()?.extras.state?.["response"];
    this.a_number = this.data.a_number;
    this.name =  this.data.name;
    this.gender =  this.data.gender;
    this.email =  this.data.email;
    this.password =  this.data.password;
    this.phone =  this.data.phone;
    this.balance =  this.data.balance;
  }

  ngOnInit(): void {
  }

  delete() {
    this.deleteData = new User(this.a_number, this.name, this.gender, this.email, this.password, this.phone, this.balance);
    this.myservice.delete(this.deleteData).subscribe(() => { 
      this.router.navigateByUrl("showAllUser");
    });
  }

---------------------------------------------------------- com.html --------------------------------------------
<div class="container my-2">
    <h1 class="text-center fw-bolder text-success">Show And Update Account</h1><br>

    <form (ngSubmit)="delete()">
      <div class="bg-success-subtle p-3 rounded">
        <div class="mb-3">
          <label for="a_number" class="form-label fw-bolder">Account Number</label>
          <input type="text" class="form-control" id="a_number" name="a_number" [(ngModel)]="a_number">
        </div>

        <div class="mb-3">
          <label for="name" class="form-label fw-bolder">Name</label>
          <input type="text" class="form-control" id="name" name="name" [(ngModel)]="name">
        </div>

        <div class="mb-3">
          <label for="gender" class="form-label fw-bolder">Gender</label>
          <input type="text" class="form-control" id="gender" name="gender" [(ngModel)]="gender">
        </div>

        <div class="mb-3">
          <label for="email" class="form-label fw-bolder">Email</label>
          <input type="text" class="form-control" id="email" name="email" [(ngModel)]="email">
        </div>

        <div class="mb-3">
          <label for="password" class="form-label fw-bolder">Password</label>
          <input type="text" class="form-control" id="password" name="password" [(ngModel)]="password">
        </div>

        <div class="mb-3">
          <label for="phone" class="form-label fw-bolder">Phone</label>
          <input type="text" class="form-control" id="phone" name="phone" [(ngModel)]="phone">
        </div>

        <div class="mb-3">
          <label for="balance" class="form-label fw-bolder">Balance</label>
          <input type="text" class="form-control" id="balance" name="balance" [(ngModel)]="balance">
        </div>

      </div>
      <button type="submit"
        class="btn btn-outline-success fw-bolder mt-3 d-block m-auto px-4"><u>Delete</u></button>
    </form>

  </div>
-------------------------------------------------------------------- updatta     com.ts----------- -------------------------------------------------------

import { Component, OnInit } from '@angular/core';
import { UserRegistrationService } from '../services/user-registration.service';
import { User } from '../models/user';

@Component({
  selector: 'app-account-update',
  templateUrl: './account-update.component.html',
  styleUrls: ['./account-update.component.css']
})
export class AccountUpdateComponent implements OnInit {

  constructor(private myservice: UserRegistrationService) {
  }

  a_number: any;
  name: any;
  gender: any;
  email: any;
  password: any;
  phone: any;
  balance: any;

  getData: any;

  ngOnInit(): void {

  }
  
  // -------------------- search account -------------------------------

  search() {
    this.myservice.search(this.a_number).subscribe((x) => {
      this.getData = x;

      this.a_number = this.getData.a_number;
      this.name = this.getData.name;
      this.gender = this.getData.gender;
      this.email = this.getData.email;
      this.password = this.getData.password;
      this.phone = this.getData.phone;
      this.balance = this.getData.balance;

    });

  }


  // ------------------------------ update account //  variable golo oi upor ya---------------------------------

  update() {
    this.getData = new User(this.a_number, this.name, this.gender, this.email, this.password, this.phone, this.balance);
    this.myservice.update(this.getData).subscribe(() => { });
    alert("Successfully Updated");
  }

}




--------------------------------------------------------- com.html------------------------------
  <div class="col-md-10">
    <div class="container my-3">
      <div class="row d-flex justify-content-between">
        <!-- ---------- account number search -------------- -->
        <div class="col-md-4 my-5">
          <br><br><br><br>
          <h3 class="text-center fw-bolder d-block">Search An Account</h3><br>
          <form (ngSubmit)="search()">
            <div class="mb-3 bg-warning-subtle p-3 rounded">
              <label for="a_number" class="form-label fw-bolder">Account Number</label>
              <input type="text" class="form-control ps-3" id="a_number" name="a_number" [(ngModel)]="a_number"
                placeholder="enter account number">
            </div>

            <button type="submit"
              class="btn btn-outline-danger  d-block text-center w-50  m-auto fw-bolder mt-2">Search</button>
          </form>
        </div>
        <!-- ---------------------- account show and update --------------------------- -->

        <div class="col-md-6 me-5">
          <div class="container my-2">
            <h1 class="text-center fw-bolder text-success">Show And Update Account</h1><br>

            <form (ngSubmit)="update()">
              <div class="bg-success-subtle p-3 rounded">
                <div class="mb-3">
                  <label for="a_number" class="form-label fw-bolder">Account Number</label>
                  <input type="text" class="form-control" id="a_number" name="a_number" [(ngModel)]="a_number">
                </div>

                <div class="mb-3">
                  <label for="name" class="form-label fw-bolder">Name</label>
                  <input type="text" class="form-control" id="name" name="name" [(ngModel)]="name">
                </div>

                <div class="mb-3">
                  <label for="gender" class="form-label fw-bolder">Gender</label>
                  <input type="text" class="form-control" id="gender" name="gender" [(ngModel)]="gender">
                </div>

                <div class="mb-3">
                  <label for="email" class="form-label fw-bolder">Email</label>
                  <input type="text" class="form-control" id="email" name="email" [(ngModel)]="email">
                </div>

                <div class="mb-3">
                  <label for="password" class="form-label fw-bolder">Password</label>
                  <input type="text" class="form-control" id="password" name="password" [(ngModel)]="password">
                </div>

                <div class="mb-3">
                  <label for="phone" class="form-label fw-bolder">Phone</label>
                  <input type="text" class="form-control" id="phone" name="phone" [(ngModel)]="phone">
                </div>

                <div class="mb-3">
                  <label for="balance" class="form-label fw-bolder">Balance</label>
                  <input type="text" class="form-control" id="balance" name="balance" [(ngModel)]="balance">
                </div>

              </div>
              <button type="submit"
                class="btn btn-outline-success fw-bolder mt-3 d-block m-auto px-4"><u>Update</u></button>
            </form>

          </div>
        </div>
      </div>
    </div>
  </div>